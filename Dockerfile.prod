# Используем Python на Alpine
FROM python:3.12.2-alpine

# Отключаем кеширование bytecode и буферизацию вывода
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

ENV POETRY_VIRTUALENVS_CREATE=false

# Устанавливаем базовые зависимости
RUN apk update && apk add --no-cache gcc musl-dev postgresql-dev build-base

# Обновляем pip
RUN python -m pip install --upgrade pip

# Устанавливаем Poetry
RUN pip install --no-cache-dir poetry

# Создаем рабочего пользователя и директории
RUN adduser -D -s /bin/bash user && chmod 777 /opt /run

WORKDIR /user

# RUN mkdir /user/frontend && chown -R user:user /user && chmod 755 /user

# Копируем файлы для установки зависимостей
COPY --chown=user:user pyproject.toml poetry.lock /user

# Устанавливаем зависимости, исключая dev
RUN poetry install --no-dev

# Копируем всё остальное
COPY --chown=user:user . /user

# Переключаемся на обычного пользователя
USER user
